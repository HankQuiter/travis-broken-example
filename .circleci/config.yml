# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1.5-browsers
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

#    working_directory: ~/repo

    steps:
      - checkout

# Decrypt SSH key for upcomming SSH tunnel (encrypted before check-in)
      - run: openssl aes-256-cbc -d -in ssh_key_enc -out id_rsa -k $Decrypt_var
      
# Key permissions 400 = Read Only by owner Only
      - run: chmod 400 id_rsa
      
# Decrypt Known_hosts for (encrypted before check-in). May not have to worry about known_hosts file with ssh -o "StrictHostKeyChecking no" see below for alternate ssh connection method
      - run: openssl aes-256-cbc -d -in circle_known_hosts -out known_hosts -k $Decrypt_var
      
# Move known_host to default location
      - run: rm ~/.ssh/known_hosts
      - run: mv ./known_hosts ~/.ssh/known_hosts

# Establish background SSH tunnel 
# "-4" needed to make sure CircleCI uses IPv4 - becasue it will use IPv6 otherwise
# "-i id_rsa" this is the login key
# "-nN"  -> "-n" needed to run command in background properly "N" means do nothing once you estalish the pipe
# "-L 9000:172.31.58.162:9000" Local port 9000 forwarded to SonarQube server instance IP&port "172.31.58.162:9000"
      - run: 
          name: Remote SSH to Cloud Instance
          command: ssh -4 -i id_rsa -nN -L 9000:172.31.58.162:9000 root@meltwatersecurityguild.cf
          #alternate auto accept unknown hosts with ssh untested
          #command: ssh -4 -i id_rsa -nN -o "StrictHostKeyChecking no" -L 9000:172.31.58.162:9000 root@meltwatersecurityguild.cf
          background: true

# Get and unzip sonar scanner soanr-scanner in parent folder
      - run: wget -nv https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.0.3.778-linux.zip
      - run: unzip -quo sonar-scanner-cli-3.0.3.778-linux.zip -d ../

# Tell sonar-scanner how to connect to SonarQube server
      - run: sudo echo "sonar.host.url=http://localhost:9000" > ../sonar-scanner-3.0.3.778-linux/conf/sonar-scanner.properties

# Execute sonar-scanner using preset "$SONAR_TOKEN" environmental variable set in CircleCI settings for this project
      - run: ../sonar-scanner-3.0.3.778-linux/bin/sonar-scanner -Dsonar.login=$SONAR_TOKEN



