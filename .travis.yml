dist: trusty
sudo: required
language: java
jdk:
  - openjdk8
env:
  matrix:
    secure: QaUoaBLuGYLwrswgHnIh7uoE1N60wHV2LKNdffl/hJK2DafHD4Zuac23zayQ4hRDW0V+k5lbLxSK4AuQX0VUsRmxJiDLP1gzR1xRJU3YLCOFdgly9XAsyVPCCSF4OurOyJMi18iynFrm3sv4QvDTq2CG0BxDkCmGAxZM17ppRJJgb7bqQjN3/cKsgL4M54IRizC4wuuC/s6Ehf/JdV/u0B4iYSox7CNVue3r5V7vC+OzY1Ci69C3VwMXOIUAjNBtjgLcYphT4Rh69cDkFLz6ERLsBH+y38lHVk6ATFEfjsNIpzR747uLYPxv/J8b7sMsU/ut8EmSuypR8PVP/EJYTZjTyg0Rpz9WL7eqnmOj2Dai+6kV6aniCeVhKydtSNyjYvwvLvMwBk/K3qIHpqf+0weOf4zLdNGYjp9PC1YY6uteeoisIBUjJs0VerV+3KwvmsCTnWiHhsP+DQCjJ5DdsdVvOypRUWnDnJhidt0SYvjT6Lrm1Celi5+gECZmkpedrOiIisokvM2nqAWwHLBuUZVxBX1bwhNIENE82ENwm0R0yToYzPU3Ze7zQ+fZc67AgzXEc78eIcweQtkI+oKV0MSV/A3jiKb65zm/P5GAEK9xRu8CBSwxSPTU+IyXinnXR9GmSlxDw7GlQzgR2FUxmsjPM5TuiclGVMR2XVnure4=
    secure: P9WfZElbV809fo4SNiZa5mCGc+FyXNGW7mgFcjrIM3qeAVNmOATOGTqRlLmSH63kutktqUVHdHmDfx3fN+v03xOWT094Fla4FnQhAB04tWB4+0lZntr7/GymuoEdmXbxF4pGrJ2zC06aJ3/Hv1m9URK0N9T1bAy2u53vtPfy0uUCtTVWmIocUxPtkvNBvR4KhxGemgtL00SQljxBAtqAE3uIZX41cVHAh+HDfRgwasDk9Qd3sJ4BTuFpNp0vdKMSHlN5l9uFudf/mxkqp3eVeXgaXEn8dzJOWVcnsnFY0Zl+XpVQro8i7q/EiNO1+LE1SiS+a70Xw//0IGuoV97d09xszZQ4J2Uv//EGw/WK799zavXqRWOWVbJbcLXEVxcv6zHzcLCg0lugTKRI9kyZ5u//OEYe8D1y7l8+jbxAPFjAFdb7J9QjCoHrJ9pHQguNM8WrCtHLRIC0dSzhOjKdEZ7AgcI6sTgfTRyuGLVtqKbIcI9jF9rnU+7YYATGH8MOJfY2DsKgIz0N0lX+w7vmh7Z8pGGmCvZJmpDzODhfPZf+fucQODr/9ribQ6cbHoZ9PevbmE0uDyL/Ed0NFMFXt83+qLsrkUVD1lser8JUJsVsJOzBviG5brSw8x1v1m7GId+hTrflMh7/letRr2w7lhmfelM0a8b1NegLJDkLj8w=
script:

# Decrypt and Unzip cert bundle for Openvpn (for more verbose unzip output remove the "-q") now contains SSH key
  - openssl aes-256-cbc -K $encrypted_7083b6319896_key -iv $encrypted_7083b6319896_iv -in certbundle.zip.enc -out certbundle.zip -d
  - unzip -q certbundle.zip

# SSH method for travis-ci
#Proper permissions for ssh key
  - chmod 400 id_rsa

# Establish background SSH tunnel 
## "-4" needed to make sure CircleCI uses IPv4 - becasue it will use IPv6 otherwise
## "-i id_rsa" this is the login key
## "-nN"  -> "-n" needed to run command in background properly "N" means do nothing once you estalish the pipe
## "-L 9000:172.31.58.162:9000" Local port 9000 forwarded to SonarQube server instance IP&port "172.31.58.162:9000"
  - ssh -4 -i id_rsa -nN -L 9000:172.31.58.162:9000 root@meltwatersecurityguild.cf > s.txt &

          

# Install openvpn
  #- sudo apt-get install openvpn

# Openvpn connection
  #- sudo openvpn --config ovpnclient.conf --remap-usr1 SIGTERM --connect-retry-max 2 --single-session -vv > r.txt&

# Wait for connection 10 seconds usially done in under 10 secd and most likely done in~ 5 sec
  #- sleep 10

# Debug what is happening in openvpn connection
  #- cat r.txt
   
# Download (for more verbose wget remove the "-nv") 
# and unzip Sonar-Scanner (for more verbose unzip output just use "-uo" instead of "-quo")
  - wget -nv https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.0.3.778-linux.zip
  - unzip -quo sonar-scanner-cli-3.0.3.778-linux.zip -d ../
  
# Openvpn method Tell sonar-scanner where the sonarqube server is (through the vpn tunnel)
  #- sudo echo "sonar.host.url=http://10.172.0.1:9000" > ../sonar-scanner-3.0.3.778-linux/conf/sonar-scanner.properties

# ssh methode to tell sonar-scanner where the server is located (ssh port forwarding)
  - sudo echo "sonar.host.url=http://localhost:9000" > ../sonar-scanner-3.0.3.778-linux/conf/sonar-scanner.properties

# Execute a sonar scan of the repo
  - ../sonar-scanner-3.0.3.778-linux/bin/sonar-scanner -Dsonar.login=$TRAVIS_SONAR_TOKEN
# TODO
  # Develope some way to ZAPROXY scan.
    # Perhapse if build process has a deploy to staging or Dev ZAPROXY can run against the deployed service
  # Download (for more verbose wget remove the "-nv") and untar/gunzip ZAPROXY - not sure what to do with it next
    #- wget -nv https://github.com/zaproxy/zaproxy/releases/download/2.6.0/ZAP_2.6.0_Linux.tar.gz
    #- mkdir ../ZAP
    #- tar -zxvf ZAP*.tar.gz -C ../ZAP --strip-components=1
# Identify working directory  
  #- echo $PWD
# List directory contents
  #- ls 
